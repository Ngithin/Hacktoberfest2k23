/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root, string path, vector<string>& ans){
        if(root == nullptr)
            return;
        string s = to_string(root->val);
        if(path.length() > 0)
            path += "->" + s;
        else
            path += s;
        solve(root->left, path, ans);
        solve(root->right, path, ans);
        if(root->left == nullptr && root->right == nullptr)
            ans.push_back(path);

    }
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> ans;
        solve(root, "", ans);
        return ans;
    }
};
